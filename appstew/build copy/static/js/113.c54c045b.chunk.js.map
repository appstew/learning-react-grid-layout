{"version":3,"file":"static/js/113.c54c045b.chunk.js","mappings":"sKAKe,SAASA,EAAWC,GAGjC,MAAMC,UAAwBC,EAAAA,UAAgBC,WAAAA,GAAA,SAAAC,WAAA,KAC5CC,MAAQ,CAAEC,OAAQ,IAAK,KAEvBC,eAAiBD,IACfE,KAAKC,SAAS,CAAEH,OAAQA,GAAS,CACjC,CAEFI,eAAAA,GACE,OAAOF,KAAKH,MAAMC,OAAOK,KAAI,SAAUC,GACrC,MAAMC,EAAe,sBAARD,EAAEE,EAA4B,OAASF,EAAEE,EACtD,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,KAAAD,SAAIJ,IAAS,MAAAM,OACNP,EAAEQ,EAAC,MAAAD,OAAKP,EAAES,EAAC,MAAAF,OAAKP,EAAEU,EAAC,MAAAH,OAAKP,EAAEW,EAAC,OAFHX,EAAEE,EAKvC,GACF,CAEAU,MAAAA,GACE,OACEN,EAAAA,EAAAA,KAAChB,EAAAA,WAAgB,CAAAe,UACfF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,CAAC,iBACbC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,iBAAmB,KACtCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,SAAET,KAAKE,wBAEjCQ,EAAAA,EAAAA,KAAClB,EAAM,CAACO,eAAgBC,KAAKD,qBAIrC,EAGF,SAASkB,IACP,MAAMC,EAAaC,SAASC,eAAe,WACrCC,EAAYC,OAAOD,WAAa,CAAC,EACvCE,EAAAA,OACE7B,EAAAA,cAAoBD,EAAiB4B,GACrCH,EAEJ,CAOA,OANKC,SAASC,eAAe,WAG3BH,IAFAE,SAASK,iBAAiB,mBAAoBP,GAKzCxB,CACT,CAtDkB,qBAAX6B,SAA2BA,OAAO5B,MAAQA,E","sources":["test-hook.jsx"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './App.css';\ntypeof window !== \"undefined\" && (window.React = React); // for devtools\n\nexport default function makeLayout(Layout) {\n  // Basic layout that mirrors the internals of its child layout by listening to `onLayoutChange`.\n  // It does not pass any other props to the Layout.\n  class ListeningLayout extends React.Component {\n    state = { layout: [] };\n\n    onLayoutChange = layout => {\n      this.setState({ layout: layout });\n    };\n\n    stringifyLayout() {\n      return this.state.layout.map(function (l) {\n        const name = l.i === \"__dropping-elem__\" ? \"drop\" : l.i;\n        return (\n          <div className=\"layoutItem\" key={l.i}>\n            <b>{name}</b>\n            {`: [${l.x}, ${l.y}, ${l.w}, ${l.h}]`}\n          </div>\n        );\n      });\n    }\n\n    render() {\n      return (\n        <React.StrictMode>\n          <div>\n            <div className=\"layoutJSON\">\n              Displayed as <code>[x, y, w, h]</code>:\n              <div className=\"columns\">{this.stringifyLayout()}</div>\n            </div>\n            <Layout onLayoutChange={this.onLayoutChange} />\n          </div>\n        </React.StrictMode>\n      );\n    }\n  }\n\n  function run() {\n    const contentDiv = document.getElementById(\"content\");\n    const gridProps = window.gridProps || {};\n    ReactDOM.render(\n      React.createElement(ListeningLayout, gridProps),\n      contentDiv\n    );\n  }\n  if (!document.getElementById(\"content\")) {\n    document.addEventListener(\"DOMContentLoaded\", run);\n  } else {\n    run();\n  }\n\n  return ListeningLayout;\n}\n"],"names":["makeLayout","Layout","ListeningLayout","React","constructor","arguments","state","layout","onLayoutChange","this","setState","stringifyLayout","map","l","name","i","_jsxs","className","children","_jsx","concat","x","y","w","h","render","run","contentDiv","document","getElementById","gridProps","window","ReactDOM","addEventListener"],"sourceRoot":""}